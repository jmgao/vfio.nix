diff --git a/kernel/kthread.c b/kernel/kthread.c
index f481ab35de2f..c30f1b2b1c9e 100644
--- a/kernel/kthread.c
+++ b/kernel/kthread.c
@@ -11,6 +11,7 @@
 #include <linux/mm.h>
 #include <linux/mmu_context.h>
 #include <linux/sched.h>
+#include <linux/sched/isolation.h>
 #include <linux/sched/mm.h>
 #include <linux/sched/task.h>
 #include <linux/kthread.h>
@@ -608,7 +609,7 @@ int kthreadd(void *unused)
 	/* Setup a clean context for our children to inherit. */
 	set_task_comm(tsk, "kthreadd");
 	ignore_signals(tsk);
-	set_cpus_allowed_ptr(tsk, cpu_all_mask);
+	set_cpus_allowed_ptr(tsk, housekeeping_cpumask(HK_FLAG_DOMAIN));
 	set_mems_allowed(node_states[N_MEMORY]);
 
 	current->flags |= PF_NOFREEZE;
diff --git a/kernel/sched/isolation.c b/kernel/sched/isolation.c
index 808244f3ddd9..f23e139c8994 100644
--- a/kernel/sched/isolation.c
+++ b/kernel/sched/isolation.c
@@ -172,6 +172,18 @@ static int __init housekeeping_isolcpus_setup(char *str)
 			continue;
 		}
 
+		if (!strncmp(str, "wq,", 3)) {
+			str += 3;
+			flags |= HK_FLAG_WQ;
+			continue;
+		}
+
+		if (!strncmp(str, "rcu,", 4)) {
+			str += 4;
+			flags |= HK_FLAG_RCU;
+			continue;
+		}
+
 		/*
 		 * Skip unknown sub-parameter and validate that it is not
 		 * containing an invalid character.
